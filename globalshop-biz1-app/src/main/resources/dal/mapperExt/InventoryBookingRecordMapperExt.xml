<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangqin.mapper.InventoryRecordMapper">

   <!-- 通用查询结果列-->
    <sql id="inventoryRecordResultMapping">
        T1.id,T1.order_id AS orderId,T1.erp_order_id AS erpOrderId,T1.sku_id AS skuId,T1.item_id AS itemId,T1.sku_code AS skuCode,T1.quantity ,T1.booked,T1.inventory,
        T1.inventory_type AS inventoryType,T1.operator_type as operatorType,T1.warehouse_id AS warehouseId,T1.position_no AS positionNo,T1.inventory_area_id AS inventoryAreaId, 
        T1.gmt_create AS gmtCreate,T1.gmt_modify AS gmtModify
    </sql>
    
	<select id="sumBookedBySkuId"  resultType="java.lang.Integer" >
        SELECT
        	 	sum(booked) 
        FROM
            inventory_record T1
        WHERE
        		order_id = #{orderId}	 and erp_order_id = #{erpOrderId}  
    </select>
    
    	<select id="sumBookedByInventoryType"  resultType="com.wangqin.model.InventoryRecord">
        SELECT
        	 	sum(booked) AS booked,inventory_type AS inventoryType
        FROM
            inventory_record T1
        WHERE
        		order_id = #{orderId}	 and erp_order_id = #{erpOrderId} 
        GROUP BY inventory_type
    </select>
    
    	<select id="queryByErpOrderId" resultType="com.wangqin.model.InventoryRecord"  >
        SELECT
        	 <include refid="inventoryRecordResultMapping" />,T2.name as warehouseName 
        FROM
            inventory_record T1 LEFT JOIN warehouse T2 ON T1.warehouse_id=T2.id 
        WHERE
        		erp_order_id = #{erpOrderId}  
    </select>
    
    	<select id="sumInventoryCheckRecord" resultType="com.wangqin.model.InventoryRecord"  >
		SELECT
        	 	sum(T1.booked) as booked  , T1.erp_order_id as erpOrderId
        FROM
            inventory_record T1 , erp_order T2
        WHERE
        		T1.erp_order_id = T2.id
        		and
        		T1.inventory_type = #{inventoryType}
        		and
        		T1.inventory_area_id = #{inventoryAreaId}
        		and 
        		T2.status in 
        		<foreach item="item" index="index" collection="status" open="("  
	            separator="," close=")">  
	            #{item}  
        		</foreach> 
        		<!-- T2.stock_status in (10,4,1) and T2.status in (0,1)  -->
		GROUP BY 
        		T1.erp_order_id 
       	HAVING booked > 0 
       	<choose>
	        <when test="inventoryType !=null and inventoryType.toString() == 'INVENTORY'">
	            ORDER BY T1.erp_order_id desc 
	        </when>
	        <otherwise>
	            ORDER BY T1.erp_order_id asc
	        </otherwise>
	    </choose>
    </select>
    
    <update id="changePositionNo" >  
    		<![CDATA[ 
	    UPDATE 
	    		inventory_record 
	    	SET 
			position_no = #{positionNo} 
	    WHERE  
	    		inventory_area_id = #{inventoryAreaId}
	    		]]> 
	</update> 
</mapper>